{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle response errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  },\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response.data;\n  },\n  forgotPassword: async email => {\n    const response = await api.post('/auth/forgotpassword', {\n      email\n    });\n    return response.data;\n  },\n  resetPassword: async (resetToken, password) => {\n    const response = await api.put(`/auth/resetpassword/${resetToken}`, {\n      password\n    });\n    return response.data;\n  }\n};\n\n// Papers API calls\nexport const papersAPI = {\n  getAllPapers: async () => {\n    const response = await api.get('/papers');\n    return response.data;\n  },\n  getPaper: async id => {\n    const response = await api.get(`/papers/${id}`);\n    return response.data;\n  },\n  createPaper: async paperData => {\n    const response = await api.post('/papers', paperData);\n    return response.data;\n  },\n  updatePaper: async (id, paperData) => {\n    const response = await api.put(`/papers/${id}`, paperData);\n    return response.data;\n  },\n  deletePaper: async id => {\n    const response = await api.delete(`/papers/${id}`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","data","setItem","login","credentials","logout","getCurrentUser","get","forgotPassword","email","resetPassword","resetToken","password","put","papersAPI","getAllPapers","getPaper","id","createPaper","paperData","updatePaper","deletePaper","delete"],"sources":["C:/Users/Rishabh Kushwaha/study/format/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add token to requests if it exists\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Handle response errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API calls\r\nexport const authAPI = {\r\n  register: async (userData) => {\r\n    const response = await api.post('/auth/register', userData);\r\n    if (response.data.token) {\r\n      localStorage.setItem('token', response.data.token);\r\n    }\r\n    return response.data;\r\n  },\r\n\r\n  login: async (credentials) => {\r\n    const response = await api.post('/auth/login', credentials);\r\n    if (response.data.token) {\r\n      localStorage.setItem('token', response.data.token);\r\n    }\r\n    return response.data;\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n  },\r\n\r\n  getCurrentUser: async () => {\r\n    const response = await api.get('/auth/me');\r\n    return response.data;\r\n  },\r\n\r\n  forgotPassword: async (email) => {\r\n    const response = await api.post('/auth/forgotpassword', { email });\r\n    return response.data;\r\n  },\r\n\r\n  resetPassword: async (resetToken, password) => {\r\n    const response = await api.put(`/auth/resetpassword/${resetToken}`, { password });\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Papers API calls\r\nexport const papersAPI = {\r\n  getAllPapers: async () => {\r\n    const response = await api.get('/papers');\r\n    return response.data;\r\n  },\r\n\r\n  getPaper: async (id) => {\r\n    const response = await api.get(`/papers/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createPaper: async (paperData) => {\r\n    const response = await api.post('/papers', paperData);\r\n    return response.data;\r\n  },\r\n\r\n  updatePaper: async (id, paperData) => {\r\n    const response = await api.put(`/papers/${id}`, paperData);\r\n    return response.data;\r\n  },\r\n\r\n  deletePaper: async (id) => {\r\n    const response = await api.delete(`/papers/${id}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}